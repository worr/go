// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
//

// WARNING: This file has automatically been generated on Fri, 13 Dec 2019 17:40:24 CST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package openbsd

/*
#include "pthread"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// pthread as declared in include/pthread.h:112
type pthread struct {
	flags          uint32
	flags_lock     int32
	retval         unsafe.Pointer
	fn             *func(arg0 unsafe.Pointer) unsafe.Pointer
	arg            unsafe.Pointer
	name           [32]byte
	delayed_cancel int32
	ref7f52b9d2    *C.pthread_t
	allocs7f52b9d2 interface{}
}

// pthreadattr as declared in include/pthread.h:113
type pthreadattr struct {
	stack_addr       unsafe.Pointer
	stack_size       uint
	guard_size       uint
	detach_state     int32
	contention_scope int32
	sched_policy     int32
	sched_param      sched_param
	sched_inherit    int32
	refabfcad8c      *C.pthread_attr_t
	allocsabfcad8c   interface{}
}

// sched_param as declared in include/sched.h:51
type sched_param struct {
	sched_priority int32
	ref6ecda53c    *C.struct_sched_param
	allocs6ecda53c interface{}
}
