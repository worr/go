// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
//

// WARNING: This file has automatically been generated on Fri, 13 Dec 2019 17:40:24 CST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package openbsd

/*
#include "pthread"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// __thrsleep function as declared in include/thread_private.h:414
func __thrsleep(arg0 unsafe.Pointer, arg1 int32, arg2 []timespec, arg3 unsafe.Pointer, arg4 []int32) int32 {
	carg0, _ := arg0, cgoAllocsUnknown
	carg1, _ := (C.clockid_t)(arg1), cgoAllocsUnknown
	carg2, _ := unpackArgSTimespec(arg2)
	carg3, _ := arg3, cgoAllocsUnknown
	carg4, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&arg4)).Data)), cgoAllocsUnknown
	__ret := C.__thrsleep(carg0, carg1, carg2, carg3, carg4)
	packSTimespec(arg2, carg2)
	__v := (int32)(__ret)
	return __v
}
